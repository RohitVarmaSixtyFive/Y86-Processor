$date
	Thu Feb 22 22:21:30 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module combine_tb $end
$var wire 64 ! valP [63:0] $end
$var wire 64 " valM [63:0] $end
$var wire 64 # valE [63:0] $end
$var wire 64 $ valC [63:0] $end
$var wire 64 % valB [63:0] $end
$var wire 64 & valA [63:0] $end
$var wire 64 ' updated_pc [63:0] $end
$var wire 4 ( rB_out [3:0] $end
$var wire 4 ) rB [3:0] $end
$var wire 4 * rA [3:0] $end
$var wire 64 + memory_address [63:0] $end
$var wire 1 , instr_valid $end
$var wire 1 - imem_error $end
$var wire 4 . ifun [3:0] $end
$var wire 4 / icode [3:0] $end
$var wire 1 0 hlt $end
$var wire 1 1 dmem_error $end
$var wire 64 2 datamem [63:0] $end
$var wire 1 3 cnd $end
$var wire 3 4 cc_out [2:0] $end
$var reg 64 5 PC [63:0] $end
$var reg 3 6 cc_in [2:0] $end
$var reg 1 7 clk $end
$scope module UUT_decode $end
$var wire 1 7 clk $end
$var wire 4 8 rB [3:0] $end
$var wire 4 9 rA [3:0] $end
$var wire 4 : icode [3:0] $end
$var reg 64 ; valA [63:0] $end
$var reg 64 < valB [63:0] $end
$upscope $end
$scope module UUT_execute $end
$var wire 3 = cc_in [2:0] $end
$var wire 1 7 clk $end
$var wire 64 > valA [63:0] $end
$var wire 64 ? valB [63:0] $end
$var wire 64 @ valC [63:0] $end
$var wire 4 A rB_in [3:0] $end
$var wire 64 B out [63:0] $end
$var wire 4 C ifun [3:0] $end
$var wire 4 D icode [3:0] $end
$var wire 1 E carry $end
$var reg 2 F Select_Line [1:0] $end
$var reg 64 G alu_a [63:0] $end
$var reg 64 H alu_b [63:0] $end
$var reg 3 I cc_out [2:0] $end
$var reg 1 3 cnd $end
$var reg 1 J of $end
$var reg 4 K rB_out [3:0] $end
$var reg 1 L sf $end
$var reg 64 M valE [63:0] $end
$var reg 1 N zf $end
$scope module alu $end
$var wire 64 O i_a [63:0] $end
$var wire 64 P i_b [63:0] $end
$var wire 2 Q select [1:0] $end
$var wire 64 R o_xor [63:0] $end
$var wire 64 S o_sub [63:0] $end
$var wire 64 T o_and [63:0] $end
$var wire 64 U o_add [63:0] $end
$var wire 1 V carry2 $end
$var wire 1 W carry1 $end
$var reg 1 E o_carry $end
$var reg 64 X out [63:0] $end
$scope module ADD $end
$var wire 64 Y a [63:0] $end
$var wire 64 Z b [63:0] $end
$var wire 64 [ s [63:0] $end
$var wire 64 \ c_temp [63:0] $end
$var wire 1 W c $end
$scope begin genblk1[1] $end
$scope module FA $end
$var wire 1 ] a $end
$var wire 1 ^ a_and_b $end
$var wire 1 _ a_xor_b $end
$var wire 1 ` ab_and_cin $end
$var wire 1 a b $end
$var wire 1 b cin $end
$var wire 1 c cout $end
$var wire 1 d s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module FA $end
$var wire 1 e a $end
$var wire 1 f a_and_b $end
$var wire 1 g a_xor_b $end
$var wire 1 h ab_and_cin $end
$var wire 1 i b $end
$var wire 1 j cin $end
$var wire 1 k cout $end
$var wire 1 l s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module FA $end
$var wire 1 m a $end
$var wire 1 n a_and_b $end
$var wire 1 o a_xor_b $end
$var wire 1 p ab_and_cin $end
$var wire 1 q b $end
$var wire 1 r cin $end
$var wire 1 s cout $end
$var wire 1 t s $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module FA $end
$var wire 1 u a $end
$var wire 1 v a_and_b $end
$var wire 1 w a_xor_b $end
$var wire 1 x ab_and_cin $end
$var wire 1 y b $end
$var wire 1 z cin $end
$var wire 1 { cout $end
$var wire 1 | s $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module FA $end
$var wire 1 } a $end
$var wire 1 ~ a_and_b $end
$var wire 1 !" a_xor_b $end
$var wire 1 "" ab_and_cin $end
$var wire 1 #" b $end
$var wire 1 $" cin $end
$var wire 1 %" cout $end
$var wire 1 &" s $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module FA $end
$var wire 1 '" a $end
$var wire 1 (" a_and_b $end
$var wire 1 )" a_xor_b $end
$var wire 1 *" ab_and_cin $end
$var wire 1 +" b $end
$var wire 1 ," cin $end
$var wire 1 -" cout $end
$var wire 1 ." s $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module FA $end
$var wire 1 /" a $end
$var wire 1 0" a_and_b $end
$var wire 1 1" a_xor_b $end
$var wire 1 2" ab_and_cin $end
$var wire 1 3" b $end
$var wire 1 4" cin $end
$var wire 1 5" cout $end
$var wire 1 6" s $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module FA $end
$var wire 1 7" a $end
$var wire 1 8" a_and_b $end
$var wire 1 9" a_xor_b $end
$var wire 1 :" ab_and_cin $end
$var wire 1 ;" b $end
$var wire 1 <" cin $end
$var wire 1 =" cout $end
$var wire 1 >" s $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module FA $end
$var wire 1 ?" a $end
$var wire 1 @" a_and_b $end
$var wire 1 A" a_xor_b $end
$var wire 1 B" ab_and_cin $end
$var wire 1 C" b $end
$var wire 1 D" cin $end
$var wire 1 E" cout $end
$var wire 1 F" s $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module FA $end
$var wire 1 G" a $end
$var wire 1 H" a_and_b $end
$var wire 1 I" a_xor_b $end
$var wire 1 J" ab_and_cin $end
$var wire 1 K" b $end
$var wire 1 L" cin $end
$var wire 1 M" cout $end
$var wire 1 N" s $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module FA $end
$var wire 1 O" a $end
$var wire 1 P" a_and_b $end
$var wire 1 Q" a_xor_b $end
$var wire 1 R" ab_and_cin $end
$var wire 1 S" b $end
$var wire 1 T" cin $end
$var wire 1 U" cout $end
$var wire 1 V" s $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module FA $end
$var wire 1 W" a $end
$var wire 1 X" a_and_b $end
$var wire 1 Y" a_xor_b $end
$var wire 1 Z" ab_and_cin $end
$var wire 1 [" b $end
$var wire 1 \" cin $end
$var wire 1 ]" cout $end
$var wire 1 ^" s $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module FA $end
$var wire 1 _" a $end
$var wire 1 `" a_and_b $end
$var wire 1 a" a_xor_b $end
$var wire 1 b" ab_and_cin $end
$var wire 1 c" b $end
$var wire 1 d" cin $end
$var wire 1 e" cout $end
$var wire 1 f" s $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module FA $end
$var wire 1 g" a $end
$var wire 1 h" a_and_b $end
$var wire 1 i" a_xor_b $end
$var wire 1 j" ab_and_cin $end
$var wire 1 k" b $end
$var wire 1 l" cin $end
$var wire 1 m" cout $end
$var wire 1 n" s $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module FA $end
$var wire 1 o" a $end
$var wire 1 p" a_and_b $end
$var wire 1 q" a_xor_b $end
$var wire 1 r" ab_and_cin $end
$var wire 1 s" b $end
$var wire 1 t" cin $end
$var wire 1 u" cout $end
$var wire 1 v" s $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module FA $end
$var wire 1 w" a $end
$var wire 1 x" a_and_b $end
$var wire 1 y" a_xor_b $end
$var wire 1 z" ab_and_cin $end
$var wire 1 {" b $end
$var wire 1 |" cin $end
$var wire 1 }" cout $end
$var wire 1 ~" s $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module FA $end
$var wire 1 !# a $end
$var wire 1 "# a_and_b $end
$var wire 1 ## a_xor_b $end
$var wire 1 $# ab_and_cin $end
$var wire 1 %# b $end
$var wire 1 &# cin $end
$var wire 1 '# cout $end
$var wire 1 (# s $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module FA $end
$var wire 1 )# a $end
$var wire 1 *# a_and_b $end
$var wire 1 +# a_xor_b $end
$var wire 1 ,# ab_and_cin $end
$var wire 1 -# b $end
$var wire 1 .# cin $end
$var wire 1 /# cout $end
$var wire 1 0# s $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module FA $end
$var wire 1 1# a $end
$var wire 1 2# a_and_b $end
$var wire 1 3# a_xor_b $end
$var wire 1 4# ab_and_cin $end
$var wire 1 5# b $end
$var wire 1 6# cin $end
$var wire 1 7# cout $end
$var wire 1 8# s $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module FA $end
$var wire 1 9# a $end
$var wire 1 :# a_and_b $end
$var wire 1 ;# a_xor_b $end
$var wire 1 <# ab_and_cin $end
$var wire 1 =# b $end
$var wire 1 ># cin $end
$var wire 1 ?# cout $end
$var wire 1 @# s $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module FA $end
$var wire 1 A# a $end
$var wire 1 B# a_and_b $end
$var wire 1 C# a_xor_b $end
$var wire 1 D# ab_and_cin $end
$var wire 1 E# b $end
$var wire 1 F# cin $end
$var wire 1 G# cout $end
$var wire 1 H# s $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module FA $end
$var wire 1 I# a $end
$var wire 1 J# a_and_b $end
$var wire 1 K# a_xor_b $end
$var wire 1 L# ab_and_cin $end
$var wire 1 M# b $end
$var wire 1 N# cin $end
$var wire 1 O# cout $end
$var wire 1 P# s $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module FA $end
$var wire 1 Q# a $end
$var wire 1 R# a_and_b $end
$var wire 1 S# a_xor_b $end
$var wire 1 T# ab_and_cin $end
$var wire 1 U# b $end
$var wire 1 V# cin $end
$var wire 1 W# cout $end
$var wire 1 X# s $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module FA $end
$var wire 1 Y# a $end
$var wire 1 Z# a_and_b $end
$var wire 1 [# a_xor_b $end
$var wire 1 \# ab_and_cin $end
$var wire 1 ]# b $end
$var wire 1 ^# cin $end
$var wire 1 _# cout $end
$var wire 1 `# s $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module FA $end
$var wire 1 a# a $end
$var wire 1 b# a_and_b $end
$var wire 1 c# a_xor_b $end
$var wire 1 d# ab_and_cin $end
$var wire 1 e# b $end
$var wire 1 f# cin $end
$var wire 1 g# cout $end
$var wire 1 h# s $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module FA $end
$var wire 1 i# a $end
$var wire 1 j# a_and_b $end
$var wire 1 k# a_xor_b $end
$var wire 1 l# ab_and_cin $end
$var wire 1 m# b $end
$var wire 1 n# cin $end
$var wire 1 o# cout $end
$var wire 1 p# s $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module FA $end
$var wire 1 q# a $end
$var wire 1 r# a_and_b $end
$var wire 1 s# a_xor_b $end
$var wire 1 t# ab_and_cin $end
$var wire 1 u# b $end
$var wire 1 v# cin $end
$var wire 1 w# cout $end
$var wire 1 x# s $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module FA $end
$var wire 1 y# a $end
$var wire 1 z# a_and_b $end
$var wire 1 {# a_xor_b $end
$var wire 1 |# ab_and_cin $end
$var wire 1 }# b $end
$var wire 1 ~# cin $end
$var wire 1 !$ cout $end
$var wire 1 "$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module FA $end
$var wire 1 #$ a $end
$var wire 1 $$ a_and_b $end
$var wire 1 %$ a_xor_b $end
$var wire 1 &$ ab_and_cin $end
$var wire 1 '$ b $end
$var wire 1 ($ cin $end
$var wire 1 )$ cout $end
$var wire 1 *$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module FA $end
$var wire 1 +$ a $end
$var wire 1 ,$ a_and_b $end
$var wire 1 -$ a_xor_b $end
$var wire 1 .$ ab_and_cin $end
$var wire 1 /$ b $end
$var wire 1 0$ cin $end
$var wire 1 1$ cout $end
$var wire 1 2$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module FA $end
$var wire 1 3$ a $end
$var wire 1 4$ a_and_b $end
$var wire 1 5$ a_xor_b $end
$var wire 1 6$ ab_and_cin $end
$var wire 1 7$ b $end
$var wire 1 8$ cin $end
$var wire 1 9$ cout $end
$var wire 1 :$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$scope module FA $end
$var wire 1 ;$ a $end
$var wire 1 <$ a_and_b $end
$var wire 1 =$ a_xor_b $end
$var wire 1 >$ ab_and_cin $end
$var wire 1 ?$ b $end
$var wire 1 @$ cin $end
$var wire 1 A$ cout $end
$var wire 1 B$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$scope module FA $end
$var wire 1 C$ a $end
$var wire 1 D$ a_and_b $end
$var wire 1 E$ a_xor_b $end
$var wire 1 F$ ab_and_cin $end
$var wire 1 G$ b $end
$var wire 1 H$ cin $end
$var wire 1 I$ cout $end
$var wire 1 J$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$scope module FA $end
$var wire 1 K$ a $end
$var wire 1 L$ a_and_b $end
$var wire 1 M$ a_xor_b $end
$var wire 1 N$ ab_and_cin $end
$var wire 1 O$ b $end
$var wire 1 P$ cin $end
$var wire 1 Q$ cout $end
$var wire 1 R$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$scope module FA $end
$var wire 1 S$ a $end
$var wire 1 T$ a_and_b $end
$var wire 1 U$ a_xor_b $end
$var wire 1 V$ ab_and_cin $end
$var wire 1 W$ b $end
$var wire 1 X$ cin $end
$var wire 1 Y$ cout $end
$var wire 1 Z$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$scope module FA $end
$var wire 1 [$ a $end
$var wire 1 \$ a_and_b $end
$var wire 1 ]$ a_xor_b $end
$var wire 1 ^$ ab_and_cin $end
$var wire 1 _$ b $end
$var wire 1 `$ cin $end
$var wire 1 a$ cout $end
$var wire 1 b$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$scope module FA $end
$var wire 1 c$ a $end
$var wire 1 d$ a_and_b $end
$var wire 1 e$ a_xor_b $end
$var wire 1 f$ ab_and_cin $end
$var wire 1 g$ b $end
$var wire 1 h$ cin $end
$var wire 1 i$ cout $end
$var wire 1 j$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$scope module FA $end
$var wire 1 k$ a $end
$var wire 1 l$ a_and_b $end
$var wire 1 m$ a_xor_b $end
$var wire 1 n$ ab_and_cin $end
$var wire 1 o$ b $end
$var wire 1 p$ cin $end
$var wire 1 q$ cout $end
$var wire 1 r$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$scope module FA $end
$var wire 1 s$ a $end
$var wire 1 t$ a_and_b $end
$var wire 1 u$ a_xor_b $end
$var wire 1 v$ ab_and_cin $end
$var wire 1 w$ b $end
$var wire 1 x$ cin $end
$var wire 1 y$ cout $end
$var wire 1 z$ s $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$scope module FA $end
$var wire 1 {$ a $end
$var wire 1 |$ a_and_b $end
$var wire 1 }$ a_xor_b $end
$var wire 1 ~$ ab_and_cin $end
$var wire 1 !% b $end
$var wire 1 "% cin $end
$var wire 1 #% cout $end
$var wire 1 $% s $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$scope module FA $end
$var wire 1 %% a $end
$var wire 1 &% a_and_b $end
$var wire 1 '% a_xor_b $end
$var wire 1 (% ab_and_cin $end
$var wire 1 )% b $end
$var wire 1 *% cin $end
$var wire 1 +% cout $end
$var wire 1 ,% s $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$scope module FA $end
$var wire 1 -% a $end
$var wire 1 .% a_and_b $end
$var wire 1 /% a_xor_b $end
$var wire 1 0% ab_and_cin $end
$var wire 1 1% b $end
$var wire 1 2% cin $end
$var wire 1 3% cout $end
$var wire 1 4% s $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$scope module FA $end
$var wire 1 5% a $end
$var wire 1 6% a_and_b $end
$var wire 1 7% a_xor_b $end
$var wire 1 8% ab_and_cin $end
$var wire 1 9% b $end
$var wire 1 :% cin $end
$var wire 1 ;% cout $end
$var wire 1 <% s $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$scope module FA $end
$var wire 1 =% a $end
$var wire 1 >% a_and_b $end
$var wire 1 ?% a_xor_b $end
$var wire 1 @% ab_and_cin $end
$var wire 1 A% b $end
$var wire 1 B% cin $end
$var wire 1 C% cout $end
$var wire 1 D% s $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$scope module FA $end
$var wire 1 E% a $end
$var wire 1 F% a_and_b $end
$var wire 1 G% a_xor_b $end
$var wire 1 H% ab_and_cin $end
$var wire 1 I% b $end
$var wire 1 J% cin $end
$var wire 1 K% cout $end
$var wire 1 L% s $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$scope module FA $end
$var wire 1 M% a $end
$var wire 1 N% a_and_b $end
$var wire 1 O% a_xor_b $end
$var wire 1 P% ab_and_cin $end
$var wire 1 Q% b $end
$var wire 1 R% cin $end
$var wire 1 S% cout $end
$var wire 1 T% s $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$scope module FA $end
$var wire 1 U% a $end
$var wire 1 V% a_and_b $end
$var wire 1 W% a_xor_b $end
$var wire 1 X% ab_and_cin $end
$var wire 1 Y% b $end
$var wire 1 Z% cin $end
$var wire 1 [% cout $end
$var wire 1 \% s $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$scope module FA $end
$var wire 1 ]% a $end
$var wire 1 ^% a_and_b $end
$var wire 1 _% a_xor_b $end
$var wire 1 `% ab_and_cin $end
$var wire 1 a% b $end
$var wire 1 b% cin $end
$var wire 1 c% cout $end
$var wire 1 d% s $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$scope module FA $end
$var wire 1 e% a $end
$var wire 1 f% a_and_b $end
$var wire 1 g% a_xor_b $end
$var wire 1 h% ab_and_cin $end
$var wire 1 i% b $end
$var wire 1 j% cin $end
$var wire 1 k% cout $end
$var wire 1 l% s $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$scope module FA $end
$var wire 1 m% a $end
$var wire 1 n% a_and_b $end
$var wire 1 o% a_xor_b $end
$var wire 1 p% ab_and_cin $end
$var wire 1 q% b $end
$var wire 1 r% cin $end
$var wire 1 s% cout $end
$var wire 1 t% s $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$scope module FA $end
$var wire 1 u% a $end
$var wire 1 v% a_and_b $end
$var wire 1 w% a_xor_b $end
$var wire 1 x% ab_and_cin $end
$var wire 1 y% b $end
$var wire 1 z% cin $end
$var wire 1 {% cout $end
$var wire 1 |% s $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$scope module FA $end
$var wire 1 }% a $end
$var wire 1 ~% a_and_b $end
$var wire 1 !& a_xor_b $end
$var wire 1 "& ab_and_cin $end
$var wire 1 #& b $end
$var wire 1 $& cin $end
$var wire 1 %& cout $end
$var wire 1 && s $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$scope module FA $end
$var wire 1 '& a $end
$var wire 1 (& a_and_b $end
$var wire 1 )& a_xor_b $end
$var wire 1 *& ab_and_cin $end
$var wire 1 +& b $end
$var wire 1 ,& cin $end
$var wire 1 -& cout $end
$var wire 1 .& s $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$scope module FA $end
$var wire 1 /& a $end
$var wire 1 0& a_and_b $end
$var wire 1 1& a_xor_b $end
$var wire 1 2& ab_and_cin $end
$var wire 1 3& b $end
$var wire 1 4& cin $end
$var wire 1 5& cout $end
$var wire 1 6& s $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$scope module FA $end
$var wire 1 7& a $end
$var wire 1 8& a_and_b $end
$var wire 1 9& a_xor_b $end
$var wire 1 :& ab_and_cin $end
$var wire 1 ;& b $end
$var wire 1 <& cin $end
$var wire 1 =& cout $end
$var wire 1 >& s $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$scope module FA $end
$var wire 1 ?& a $end
$var wire 1 @& a_and_b $end
$var wire 1 A& a_xor_b $end
$var wire 1 B& ab_and_cin $end
$var wire 1 C& b $end
$var wire 1 D& cin $end
$var wire 1 E& cout $end
$var wire 1 F& s $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$scope module FA $end
$var wire 1 G& a $end
$var wire 1 H& a_and_b $end
$var wire 1 I& a_xor_b $end
$var wire 1 J& ab_and_cin $end
$var wire 1 K& b $end
$var wire 1 L& cin $end
$var wire 1 M& cout $end
$var wire 1 N& s $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$scope module FA $end
$var wire 1 O& a $end
$var wire 1 P& a_and_b $end
$var wire 1 Q& a_xor_b $end
$var wire 1 R& ab_and_cin $end
$var wire 1 S& b $end
$var wire 1 T& cin $end
$var wire 1 U& cout $end
$var wire 1 V& s $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$scope module FA $end
$var wire 1 W& a $end
$var wire 1 X& a_and_b $end
$var wire 1 Y& a_xor_b $end
$var wire 1 Z& ab_and_cin $end
$var wire 1 [& b $end
$var wire 1 \& cin $end
$var wire 1 ]& cout $end
$var wire 1 ^& s $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$scope module FA $end
$var wire 1 _& a $end
$var wire 1 `& a_and_b $end
$var wire 1 a& a_xor_b $end
$var wire 1 b& ab_and_cin $end
$var wire 1 c& b $end
$var wire 1 d& cin $end
$var wire 1 e& cout $end
$var wire 1 f& s $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$scope module FA $end
$var wire 1 g& a $end
$var wire 1 h& a_and_b $end
$var wire 1 i& a_xor_b $end
$var wire 1 j& ab_and_cin $end
$var wire 1 k& b $end
$var wire 1 l& cin $end
$var wire 1 m& cout $end
$var wire 1 n& s $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$scope module FA $end
$var wire 1 o& a $end
$var wire 1 p& a_and_b $end
$var wire 1 q& a_xor_b $end
$var wire 1 r& ab_and_cin $end
$var wire 1 s& b $end
$var wire 1 t& cin $end
$var wire 1 u& cout $end
$var wire 1 v& s $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$scope module FA $end
$var wire 1 w& a $end
$var wire 1 x& a_and_b $end
$var wire 1 y& a_xor_b $end
$var wire 1 z& ab_and_cin $end
$var wire 1 {& b $end
$var wire 1 |& cin $end
$var wire 1 }& cout $end
$var wire 1 ~& s $end
$upscope $end
$upscope $end
$scope module FA $end
$var wire 1 !' a $end
$var wire 1 "' a_and_b $end
$var wire 1 #' a_xor_b $end
$var wire 1 $' ab_and_cin $end
$var wire 1 %' b $end
$var wire 1 &' cin $end
$var wire 1 '' cout $end
$var wire 1 (' s $end
$upscope $end
$upscope $end
$scope module AND $end
$var wire 64 )' a [63:0] $end
$var wire 64 *' b [63:0] $end
$var wire 64 +' out [63:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope module SUB $end
$var wire 64 ,' a [63:0] $end
$var wire 64 -' b [63:0] $end
$var wire 64 .' d [63:0] $end
$var wire 64 /' c_temp [63:0] $end
$var wire 1 V c $end
$var wire 64 0' b_C [63:0] $end
$scope begin genblk1[1] $end
$scope module FULL_ADDER $end
$var wire 1 1' a $end
$var wire 1 2' a_and_b $end
$var wire 1 3' a_xor_b $end
$var wire 1 4' ab_and_cin $end
$var wire 1 5' b $end
$var wire 1 6' cin $end
$var wire 1 7' cout $end
$var wire 1 8' s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module FULL_ADDER $end
$var wire 1 9' a $end
$var wire 1 :' a_and_b $end
$var wire 1 ;' a_xor_b $end
$var wire 1 <' ab_and_cin $end
$var wire 1 =' b $end
$var wire 1 >' cin $end
$var wire 1 ?' cout $end
$var wire 1 @' s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module FULL_ADDER $end
$var wire 1 A' a $end
$var wire 1 B' a_and_b $end
$var wire 1 C' a_xor_b $end
$var wire 1 D' ab_and_cin $end
$var wire 1 E' b $end
$var wire 1 F' cin $end
$var wire 1 G' cout $end
$var wire 1 H' s $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module FULL_ADDER $end
$var wire 1 I' a $end
$var wire 1 J' a_and_b $end
$var wire 1 K' a_xor_b $end
$var wire 1 L' ab_and_cin $end
$var wire 1 M' b $end
$var wire 1 N' cin $end
$var wire 1 O' cout $end
$var wire 1 P' s $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module FULL_ADDER $end
$var wire 1 Q' a $end
$var wire 1 R' a_and_b $end
$var wire 1 S' a_xor_b $end
$var wire 1 T' ab_and_cin $end
$var wire 1 U' b $end
$var wire 1 V' cin $end
$var wire 1 W' cout $end
$var wire 1 X' s $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module FULL_ADDER $end
$var wire 1 Y' a $end
$var wire 1 Z' a_and_b $end
$var wire 1 [' a_xor_b $end
$var wire 1 \' ab_and_cin $end
$var wire 1 ]' b $end
$var wire 1 ^' cin $end
$var wire 1 _' cout $end
$var wire 1 `' s $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module FULL_ADDER $end
$var wire 1 a' a $end
$var wire 1 b' a_and_b $end
$var wire 1 c' a_xor_b $end
$var wire 1 d' ab_and_cin $end
$var wire 1 e' b $end
$var wire 1 f' cin $end
$var wire 1 g' cout $end
$var wire 1 h' s $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module FULL_ADDER $end
$var wire 1 i' a $end
$var wire 1 j' a_and_b $end
$var wire 1 k' a_xor_b $end
$var wire 1 l' ab_and_cin $end
$var wire 1 m' b $end
$var wire 1 n' cin $end
$var wire 1 o' cout $end
$var wire 1 p' s $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module FULL_ADDER $end
$var wire 1 q' a $end
$var wire 1 r' a_and_b $end
$var wire 1 s' a_xor_b $end
$var wire 1 t' ab_and_cin $end
$var wire 1 u' b $end
$var wire 1 v' cin $end
$var wire 1 w' cout $end
$var wire 1 x' s $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module FULL_ADDER $end
$var wire 1 y' a $end
$var wire 1 z' a_and_b $end
$var wire 1 {' a_xor_b $end
$var wire 1 |' ab_and_cin $end
$var wire 1 }' b $end
$var wire 1 ~' cin $end
$var wire 1 !( cout $end
$var wire 1 "( s $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module FULL_ADDER $end
$var wire 1 #( a $end
$var wire 1 $( a_and_b $end
$var wire 1 %( a_xor_b $end
$var wire 1 &( ab_and_cin $end
$var wire 1 '( b $end
$var wire 1 (( cin $end
$var wire 1 )( cout $end
$var wire 1 *( s $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module FULL_ADDER $end
$var wire 1 +( a $end
$var wire 1 ,( a_and_b $end
$var wire 1 -( a_xor_b $end
$var wire 1 .( ab_and_cin $end
$var wire 1 /( b $end
$var wire 1 0( cin $end
$var wire 1 1( cout $end
$var wire 1 2( s $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module FULL_ADDER $end
$var wire 1 3( a $end
$var wire 1 4( a_and_b $end
$var wire 1 5( a_xor_b $end
$var wire 1 6( ab_and_cin $end
$var wire 1 7( b $end
$var wire 1 8( cin $end
$var wire 1 9( cout $end
$var wire 1 :( s $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module FULL_ADDER $end
$var wire 1 ;( a $end
$var wire 1 <( a_and_b $end
$var wire 1 =( a_xor_b $end
$var wire 1 >( ab_and_cin $end
$var wire 1 ?( b $end
$var wire 1 @( cin $end
$var wire 1 A( cout $end
$var wire 1 B( s $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module FULL_ADDER $end
$var wire 1 C( a $end
$var wire 1 D( a_and_b $end
$var wire 1 E( a_xor_b $end
$var wire 1 F( ab_and_cin $end
$var wire 1 G( b $end
$var wire 1 H( cin $end
$var wire 1 I( cout $end
$var wire 1 J( s $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module FULL_ADDER $end
$var wire 1 K( a $end
$var wire 1 L( a_and_b $end
$var wire 1 M( a_xor_b $end
$var wire 1 N( ab_and_cin $end
$var wire 1 O( b $end
$var wire 1 P( cin $end
$var wire 1 Q( cout $end
$var wire 1 R( s $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module FULL_ADDER $end
$var wire 1 S( a $end
$var wire 1 T( a_and_b $end
$var wire 1 U( a_xor_b $end
$var wire 1 V( ab_and_cin $end
$var wire 1 W( b $end
$var wire 1 X( cin $end
$var wire 1 Y( cout $end
$var wire 1 Z( s $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module FULL_ADDER $end
$var wire 1 [( a $end
$var wire 1 \( a_and_b $end
$var wire 1 ]( a_xor_b $end
$var wire 1 ^( ab_and_cin $end
$var wire 1 _( b $end
$var wire 1 `( cin $end
$var wire 1 a( cout $end
$var wire 1 b( s $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module FULL_ADDER $end
$var wire 1 c( a $end
$var wire 1 d( a_and_b $end
$var wire 1 e( a_xor_b $end
$var wire 1 f( ab_and_cin $end
$var wire 1 g( b $end
$var wire 1 h( cin $end
$var wire 1 i( cout $end
$var wire 1 j( s $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module FULL_ADDER $end
$var wire 1 k( a $end
$var wire 1 l( a_and_b $end
$var wire 1 m( a_xor_b $end
$var wire 1 n( ab_and_cin $end
$var wire 1 o( b $end
$var wire 1 p( cin $end
$var wire 1 q( cout $end
$var wire 1 r( s $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module FULL_ADDER $end
$var wire 1 s( a $end
$var wire 1 t( a_and_b $end
$var wire 1 u( a_xor_b $end
$var wire 1 v( ab_and_cin $end
$var wire 1 w( b $end
$var wire 1 x( cin $end
$var wire 1 y( cout $end
$var wire 1 z( s $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module FULL_ADDER $end
$var wire 1 {( a $end
$var wire 1 |( a_and_b $end
$var wire 1 }( a_xor_b $end
$var wire 1 ~( ab_and_cin $end
$var wire 1 !) b $end
$var wire 1 ") cin $end
$var wire 1 #) cout $end
$var wire 1 $) s $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module FULL_ADDER $end
$var wire 1 %) a $end
$var wire 1 &) a_and_b $end
$var wire 1 ') a_xor_b $end
$var wire 1 () ab_and_cin $end
$var wire 1 )) b $end
$var wire 1 *) cin $end
$var wire 1 +) cout $end
$var wire 1 ,) s $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module FULL_ADDER $end
$var wire 1 -) a $end
$var wire 1 .) a_and_b $end
$var wire 1 /) a_xor_b $end
$var wire 1 0) ab_and_cin $end
$var wire 1 1) b $end
$var wire 1 2) cin $end
$var wire 1 3) cout $end
$var wire 1 4) s $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module FULL_ADDER $end
$var wire 1 5) a $end
$var wire 1 6) a_and_b $end
$var wire 1 7) a_xor_b $end
$var wire 1 8) ab_and_cin $end
$var wire 1 9) b $end
$var wire 1 :) cin $end
$var wire 1 ;) cout $end
$var wire 1 <) s $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module FULL_ADDER $end
$var wire 1 =) a $end
$var wire 1 >) a_and_b $end
$var wire 1 ?) a_xor_b $end
$var wire 1 @) ab_and_cin $end
$var wire 1 A) b $end
$var wire 1 B) cin $end
$var wire 1 C) cout $end
$var wire 1 D) s $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module FULL_ADDER $end
$var wire 1 E) a $end
$var wire 1 F) a_and_b $end
$var wire 1 G) a_xor_b $end
$var wire 1 H) ab_and_cin $end
$var wire 1 I) b $end
$var wire 1 J) cin $end
$var wire 1 K) cout $end
$var wire 1 L) s $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module FULL_ADDER $end
$var wire 1 M) a $end
$var wire 1 N) a_and_b $end
$var wire 1 O) a_xor_b $end
$var wire 1 P) ab_and_cin $end
$var wire 1 Q) b $end
$var wire 1 R) cin $end
$var wire 1 S) cout $end
$var wire 1 T) s $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module FULL_ADDER $end
$var wire 1 U) a $end
$var wire 1 V) a_and_b $end
$var wire 1 W) a_xor_b $end
$var wire 1 X) ab_and_cin $end
$var wire 1 Y) b $end
$var wire 1 Z) cin $end
$var wire 1 [) cout $end
$var wire 1 \) s $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module FULL_ADDER $end
$var wire 1 ]) a $end
$var wire 1 ^) a_and_b $end
$var wire 1 _) a_xor_b $end
$var wire 1 `) ab_and_cin $end
$var wire 1 a) b $end
$var wire 1 b) cin $end
$var wire 1 c) cout $end
$var wire 1 d) s $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module FULL_ADDER $end
$var wire 1 e) a $end
$var wire 1 f) a_and_b $end
$var wire 1 g) a_xor_b $end
$var wire 1 h) ab_and_cin $end
$var wire 1 i) b $end
$var wire 1 j) cin $end
$var wire 1 k) cout $end
$var wire 1 l) s $end
$upscope $end
$upscope $end
$scope begin genblk1[32] $end
$scope module FULL_ADDER $end
$var wire 1 m) a $end
$var wire 1 n) a_and_b $end
$var wire 1 o) a_xor_b $end
$var wire 1 p) ab_and_cin $end
$var wire 1 q) b $end
$var wire 1 r) cin $end
$var wire 1 s) cout $end
$var wire 1 t) s $end
$upscope $end
$upscope $end
$scope begin genblk1[33] $end
$scope module FULL_ADDER $end
$var wire 1 u) a $end
$var wire 1 v) a_and_b $end
$var wire 1 w) a_xor_b $end
$var wire 1 x) ab_and_cin $end
$var wire 1 y) b $end
$var wire 1 z) cin $end
$var wire 1 {) cout $end
$var wire 1 |) s $end
$upscope $end
$upscope $end
$scope begin genblk1[34] $end
$scope module FULL_ADDER $end
$var wire 1 }) a $end
$var wire 1 ~) a_and_b $end
$var wire 1 !* a_xor_b $end
$var wire 1 "* ab_and_cin $end
$var wire 1 #* b $end
$var wire 1 $* cin $end
$var wire 1 %* cout $end
$var wire 1 &* s $end
$upscope $end
$upscope $end
$scope begin genblk1[35] $end
$scope module FULL_ADDER $end
$var wire 1 '* a $end
$var wire 1 (* a_and_b $end
$var wire 1 )* a_xor_b $end
$var wire 1 ** ab_and_cin $end
$var wire 1 +* b $end
$var wire 1 ,* cin $end
$var wire 1 -* cout $end
$var wire 1 .* s $end
$upscope $end
$upscope $end
$scope begin genblk1[36] $end
$scope module FULL_ADDER $end
$var wire 1 /* a $end
$var wire 1 0* a_and_b $end
$var wire 1 1* a_xor_b $end
$var wire 1 2* ab_and_cin $end
$var wire 1 3* b $end
$var wire 1 4* cin $end
$var wire 1 5* cout $end
$var wire 1 6* s $end
$upscope $end
$upscope $end
$scope begin genblk1[37] $end
$scope module FULL_ADDER $end
$var wire 1 7* a $end
$var wire 1 8* a_and_b $end
$var wire 1 9* a_xor_b $end
$var wire 1 :* ab_and_cin $end
$var wire 1 ;* b $end
$var wire 1 <* cin $end
$var wire 1 =* cout $end
$var wire 1 >* s $end
$upscope $end
$upscope $end
$scope begin genblk1[38] $end
$scope module FULL_ADDER $end
$var wire 1 ?* a $end
$var wire 1 @* a_and_b $end
$var wire 1 A* a_xor_b $end
$var wire 1 B* ab_and_cin $end
$var wire 1 C* b $end
$var wire 1 D* cin $end
$var wire 1 E* cout $end
$var wire 1 F* s $end
$upscope $end
$upscope $end
$scope begin genblk1[39] $end
$scope module FULL_ADDER $end
$var wire 1 G* a $end
$var wire 1 H* a_and_b $end
$var wire 1 I* a_xor_b $end
$var wire 1 J* ab_and_cin $end
$var wire 1 K* b $end
$var wire 1 L* cin $end
$var wire 1 M* cout $end
$var wire 1 N* s $end
$upscope $end
$upscope $end
$scope begin genblk1[40] $end
$scope module FULL_ADDER $end
$var wire 1 O* a $end
$var wire 1 P* a_and_b $end
$var wire 1 Q* a_xor_b $end
$var wire 1 R* ab_and_cin $end
$var wire 1 S* b $end
$var wire 1 T* cin $end
$var wire 1 U* cout $end
$var wire 1 V* s $end
$upscope $end
$upscope $end
$scope begin genblk1[41] $end
$scope module FULL_ADDER $end
$var wire 1 W* a $end
$var wire 1 X* a_and_b $end
$var wire 1 Y* a_xor_b $end
$var wire 1 Z* ab_and_cin $end
$var wire 1 [* b $end
$var wire 1 \* cin $end
$var wire 1 ]* cout $end
$var wire 1 ^* s $end
$upscope $end
$upscope $end
$scope begin genblk1[42] $end
$scope module FULL_ADDER $end
$var wire 1 _* a $end
$var wire 1 `* a_and_b $end
$var wire 1 a* a_xor_b $end
$var wire 1 b* ab_and_cin $end
$var wire 1 c* b $end
$var wire 1 d* cin $end
$var wire 1 e* cout $end
$var wire 1 f* s $end
$upscope $end
$upscope $end
$scope begin genblk1[43] $end
$scope module FULL_ADDER $end
$var wire 1 g* a $end
$var wire 1 h* a_and_b $end
$var wire 1 i* a_xor_b $end
$var wire 1 j* ab_and_cin $end
$var wire 1 k* b $end
$var wire 1 l* cin $end
$var wire 1 m* cout $end
$var wire 1 n* s $end
$upscope $end
$upscope $end
$scope begin genblk1[44] $end
$scope module FULL_ADDER $end
$var wire 1 o* a $end
$var wire 1 p* a_and_b $end
$var wire 1 q* a_xor_b $end
$var wire 1 r* ab_and_cin $end
$var wire 1 s* b $end
$var wire 1 t* cin $end
$var wire 1 u* cout $end
$var wire 1 v* s $end
$upscope $end
$upscope $end
$scope begin genblk1[45] $end
$scope module FULL_ADDER $end
$var wire 1 w* a $end
$var wire 1 x* a_and_b $end
$var wire 1 y* a_xor_b $end
$var wire 1 z* ab_and_cin $end
$var wire 1 {* b $end
$var wire 1 |* cin $end
$var wire 1 }* cout $end
$var wire 1 ~* s $end
$upscope $end
$upscope $end
$scope begin genblk1[46] $end
$scope module FULL_ADDER $end
$var wire 1 !+ a $end
$var wire 1 "+ a_and_b $end
$var wire 1 #+ a_xor_b $end
$var wire 1 $+ ab_and_cin $end
$var wire 1 %+ b $end
$var wire 1 &+ cin $end
$var wire 1 '+ cout $end
$var wire 1 (+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[47] $end
$scope module FULL_ADDER $end
$var wire 1 )+ a $end
$var wire 1 *+ a_and_b $end
$var wire 1 ++ a_xor_b $end
$var wire 1 ,+ ab_and_cin $end
$var wire 1 -+ b $end
$var wire 1 .+ cin $end
$var wire 1 /+ cout $end
$var wire 1 0+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[48] $end
$scope module FULL_ADDER $end
$var wire 1 1+ a $end
$var wire 1 2+ a_and_b $end
$var wire 1 3+ a_xor_b $end
$var wire 1 4+ ab_and_cin $end
$var wire 1 5+ b $end
$var wire 1 6+ cin $end
$var wire 1 7+ cout $end
$var wire 1 8+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[49] $end
$scope module FULL_ADDER $end
$var wire 1 9+ a $end
$var wire 1 :+ a_and_b $end
$var wire 1 ;+ a_xor_b $end
$var wire 1 <+ ab_and_cin $end
$var wire 1 =+ b $end
$var wire 1 >+ cin $end
$var wire 1 ?+ cout $end
$var wire 1 @+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[50] $end
$scope module FULL_ADDER $end
$var wire 1 A+ a $end
$var wire 1 B+ a_and_b $end
$var wire 1 C+ a_xor_b $end
$var wire 1 D+ ab_and_cin $end
$var wire 1 E+ b $end
$var wire 1 F+ cin $end
$var wire 1 G+ cout $end
$var wire 1 H+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[51] $end
$scope module FULL_ADDER $end
$var wire 1 I+ a $end
$var wire 1 J+ a_and_b $end
$var wire 1 K+ a_xor_b $end
$var wire 1 L+ ab_and_cin $end
$var wire 1 M+ b $end
$var wire 1 N+ cin $end
$var wire 1 O+ cout $end
$var wire 1 P+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[52] $end
$scope module FULL_ADDER $end
$var wire 1 Q+ a $end
$var wire 1 R+ a_and_b $end
$var wire 1 S+ a_xor_b $end
$var wire 1 T+ ab_and_cin $end
$var wire 1 U+ b $end
$var wire 1 V+ cin $end
$var wire 1 W+ cout $end
$var wire 1 X+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[53] $end
$scope module FULL_ADDER $end
$var wire 1 Y+ a $end
$var wire 1 Z+ a_and_b $end
$var wire 1 [+ a_xor_b $end
$var wire 1 \+ ab_and_cin $end
$var wire 1 ]+ b $end
$var wire 1 ^+ cin $end
$var wire 1 _+ cout $end
$var wire 1 `+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[54] $end
$scope module FULL_ADDER $end
$var wire 1 a+ a $end
$var wire 1 b+ a_and_b $end
$var wire 1 c+ a_xor_b $end
$var wire 1 d+ ab_and_cin $end
$var wire 1 e+ b $end
$var wire 1 f+ cin $end
$var wire 1 g+ cout $end
$var wire 1 h+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[55] $end
$scope module FULL_ADDER $end
$var wire 1 i+ a $end
$var wire 1 j+ a_and_b $end
$var wire 1 k+ a_xor_b $end
$var wire 1 l+ ab_and_cin $end
$var wire 1 m+ b $end
$var wire 1 n+ cin $end
$var wire 1 o+ cout $end
$var wire 1 p+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[56] $end
$scope module FULL_ADDER $end
$var wire 1 q+ a $end
$var wire 1 r+ a_and_b $end
$var wire 1 s+ a_xor_b $end
$var wire 1 t+ ab_and_cin $end
$var wire 1 u+ b $end
$var wire 1 v+ cin $end
$var wire 1 w+ cout $end
$var wire 1 x+ s $end
$upscope $end
$upscope $end
$scope begin genblk1[57] $end
$scope module FULL_ADDER $end
$var wire 1 y+ a $end
$var wire 1 z+ a_and_b $end
$var wire 1 {+ a_xor_b $end
$var wire 1 |+ ab_and_cin $end
$var wire 1 }+ b $end
$var wire 1 ~+ cin $end
$var wire 1 !, cout $end
$var wire 1 ", s $end
$upscope $end
$upscope $end
$scope begin genblk1[58] $end
$scope module FULL_ADDER $end
$var wire 1 #, a $end
$var wire 1 $, a_and_b $end
$var wire 1 %, a_xor_b $end
$var wire 1 &, ab_and_cin $end
$var wire 1 ', b $end
$var wire 1 (, cin $end
$var wire 1 ), cout $end
$var wire 1 *, s $end
$upscope $end
$upscope $end
$scope begin genblk1[59] $end
$scope module FULL_ADDER $end
$var wire 1 +, a $end
$var wire 1 ,, a_and_b $end
$var wire 1 -, a_xor_b $end
$var wire 1 ., ab_and_cin $end
$var wire 1 /, b $end
$var wire 1 0, cin $end
$var wire 1 1, cout $end
$var wire 1 2, s $end
$upscope $end
$upscope $end
$scope begin genblk1[60] $end
$scope module FULL_ADDER $end
$var wire 1 3, a $end
$var wire 1 4, a_and_b $end
$var wire 1 5, a_xor_b $end
$var wire 1 6, ab_and_cin $end
$var wire 1 7, b $end
$var wire 1 8, cin $end
$var wire 1 9, cout $end
$var wire 1 :, s $end
$upscope $end
$upscope $end
$scope begin genblk1[61] $end
$scope module FULL_ADDER $end
$var wire 1 ;, a $end
$var wire 1 <, a_and_b $end
$var wire 1 =, a_xor_b $end
$var wire 1 >, ab_and_cin $end
$var wire 1 ?, b $end
$var wire 1 @, cin $end
$var wire 1 A, cout $end
$var wire 1 B, s $end
$upscope $end
$upscope $end
$scope begin genblk1[62] $end
$scope module FULL_ADDER $end
$var wire 1 C, a $end
$var wire 1 D, a_and_b $end
$var wire 1 E, a_xor_b $end
$var wire 1 F, ab_and_cin $end
$var wire 1 G, b $end
$var wire 1 H, cin $end
$var wire 1 I, cout $end
$var wire 1 J, s $end
$upscope $end
$upscope $end
$scope begin genblk1[63] $end
$scope module FULL_ADDER $end
$var wire 1 K, a $end
$var wire 1 L, a_and_b $end
$var wire 1 M, a_xor_b $end
$var wire 1 N, ab_and_cin $end
$var wire 1 O, b $end
$var wire 1 P, cin $end
$var wire 1 Q, cout $end
$var wire 1 R, s $end
$upscope $end
$upscope $end
$scope module FULL_ADDER_0 $end
$var wire 1 S, a $end
$var wire 1 T, a_and_b $end
$var wire 1 U, a_xor_b $end
$var wire 1 V, ab_and_cin $end
$var wire 1 W, b $end
$var wire 1 X, cin $end
$var wire 1 Y, cout $end
$var wire 1 Z, s $end
$upscope $end
$upscope $end
$scope module XOR $end
$var wire 64 [, a [63:0] $end
$var wire 64 \, b [63:0] $end
$var wire 64 ], out [63:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module UUT_fetch $end
$var wire 64 ^, PC [63:0] $end
$var wire 1 7 clk $end
$var reg 1 0 hlt $end
$var reg 4 _, icode [3:0] $end
$var reg 4 `, ifun [3:0] $end
$var reg 1 - imem_error $end
$var reg 1 , instr_valid $end
$var reg 80 a, instruction [0:79] $end
$var reg 72 b, jump_handle [0:71] $end
$var reg 4 c, rA [3:0] $end
$var reg 8 d, rArB_Extract [0:7] $end
$var reg 4 e, rB [3:0] $end
$var reg 64 f, valC [63:0] $end
$var reg 64 g, valP [63:0] $end
$upscope $end
$scope module UUT_memory $end
$var wire 1 7 clk $end
$var wire 4 h, icode [3:0] $end
$var wire 64 i, valA [63:0] $end
$var wire 64 j, valE [63:0] $end
$var wire 64 k, valP [63:0] $end
$var reg 64 l, datamem [63:0] $end
$var reg 1 1 dmem_error $end
$var reg 64 m, memory_address [63:0] $end
$var reg 64 n, valM [63:0] $end
$upscope $end
$scope module UUT_pc_update $end
$var wire 64 o, PC [63:0] $end
$var wire 1 7 clk $end
$var wire 1 3 cnd $end
$var wire 4 p, icode [3:0] $end
$var wire 64 q, valC [63:0] $end
$var wire 64 r, valM [63:0] $end
$var wire 64 s, valP [63:0] $end
$var reg 64 t, updated_pc [63:0] $end
$upscope $end
$scope module UUT_writeback $end
$var wire 1 7 clk $end
$var wire 1 3 cnd $end
$var wire 4 u, icode [3:0] $end
$var wire 4 v, rA [3:0] $end
$var wire 4 w, rB [3:0] $end
$var wire 64 x, valA [63:0] $end
$var wire 64 y, valE [63:0] $end
$var wire 64 z, valM [63:0] $end
$var reg 4 {, dstE [3:0] $end
$var reg 4 |, dstM [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 |,
b1111 {,
b0 z,
bx y,
b0 x,
b0 w,
b0 v,
bx u,
bx t,
bx s,
b0 r,
b0 q,
bx p,
b0 o,
b0 n,
b0 m,
bx l,
bx k,
bx j,
b0 i,
bx h,
bx g,
b0 f,
b0 e,
bx d,
b0 c,
bx b,
bx a,
bx `,
bx _,
b0 ^,
b0 ],
b0 \,
b0 [,
0Z,
1Y,
1X,
1W,
1V,
1U,
0T,
0S,
0R,
1Q,
1P,
1O,
1N,
1M,
0L,
0K,
0J,
1I,
1H,
1G,
1F,
1E,
0D,
0C,
0B,
1A,
1@,
1?,
1>,
1=,
0<,
0;,
0:,
19,
18,
17,
16,
15,
04,
03,
02,
11,
10,
1/,
1.,
1-,
0,,
0+,
0*,
1),
1(,
1',
1&,
1%,
0$,
0#,
0",
1!,
1~+
1}+
1|+
1{+
0z+
0y+
0x+
1w+
1v+
1u+
1t+
1s+
0r+
0q+
0p+
1o+
1n+
1m+
1l+
1k+
0j+
0i+
0h+
1g+
1f+
1e+
1d+
1c+
0b+
0a+
0`+
1_+
1^+
1]+
1\+
1[+
0Z+
0Y+
0X+
1W+
1V+
1U+
1T+
1S+
0R+
0Q+
0P+
1O+
1N+
1M+
1L+
1K+
0J+
0I+
0H+
1G+
1F+
1E+
1D+
1C+
0B+
0A+
0@+
1?+
1>+
1=+
1<+
1;+
0:+
09+
08+
17+
16+
15+
14+
13+
02+
01+
00+
1/+
1.+
1-+
1,+
1++
0*+
0)+
0(+
1'+
1&+
1%+
1$+
1#+
0"+
0!+
0~*
1}*
1|*
1{*
1z*
1y*
0x*
0w*
0v*
1u*
1t*
1s*
1r*
1q*
0p*
0o*
0n*
1m*
1l*
1k*
1j*
1i*
0h*
0g*
0f*
1e*
1d*
1c*
1b*
1a*
0`*
0_*
0^*
1]*
1\*
1[*
1Z*
1Y*
0X*
0W*
0V*
1U*
1T*
1S*
1R*
1Q*
0P*
0O*
0N*
1M*
1L*
1K*
1J*
1I*
0H*
0G*
0F*
1E*
1D*
1C*
1B*
1A*
0@*
0?*
0>*
1=*
1<*
1;*
1:*
19*
08*
07*
06*
15*
14*
13*
12*
11*
00*
0/*
0.*
1-*
1,*
1+*
1**
1)*
0(*
0'*
0&*
1%*
1$*
1#*
1"*
1!*
0~)
0})
0|)
1{)
1z)
1y)
1x)
1w)
0v)
0u)
0t)
1s)
1r)
1q)
1p)
1o)
0n)
0m)
0l)
1k)
1j)
1i)
1h)
1g)
0f)
0e)
0d)
1c)
1b)
1a)
1`)
1_)
0^)
0])
0\)
1[)
1Z)
1Y)
1X)
1W)
0V)
0U)
0T)
1S)
1R)
1Q)
1P)
1O)
0N)
0M)
0L)
1K)
1J)
1I)
1H)
1G)
0F)
0E)
0D)
1C)
1B)
1A)
1@)
1?)
0>)
0=)
0<)
1;)
1:)
19)
18)
17)
06)
05)
04)
13)
12)
11)
10)
1/)
0.)
0-)
0,)
1+)
1*)
1))
1()
1')
0&)
0%)
0$)
1#)
1")
1!)
1~(
1}(
0|(
0{(
0z(
1y(
1x(
1w(
1v(
1u(
0t(
0s(
0r(
1q(
1p(
1o(
1n(
1m(
0l(
0k(
0j(
1i(
1h(
1g(
1f(
1e(
0d(
0c(
0b(
1a(
1`(
1_(
1^(
1](
0\(
0[(
0Z(
1Y(
1X(
1W(
1V(
1U(
0T(
0S(
0R(
1Q(
1P(
1O(
1N(
1M(
0L(
0K(
0J(
1I(
1H(
1G(
1F(
1E(
0D(
0C(
0B(
1A(
1@(
1?(
1>(
1=(
0<(
0;(
0:(
19(
18(
17(
16(
15(
04(
03(
02(
11(
10(
1/(
1.(
1-(
0,(
0+(
0*(
1)(
1((
1'(
1&(
1%(
0$(
0#(
0"(
1!(
1~'
1}'
1|'
1{'
0z'
0y'
0x'
1w'
1v'
1u'
1t'
1s'
0r'
0q'
0p'
1o'
1n'
1m'
1l'
1k'
0j'
0i'
0h'
1g'
1f'
1e'
1d'
1c'
0b'
0a'
0`'
1_'
1^'
1]'
1\'
1['
0Z'
0Y'
0X'
1W'
1V'
1U'
1T'
1S'
0R'
0Q'
0P'
1O'
1N'
1M'
1L'
1K'
0J'
0I'
0H'
1G'
1F'
1E'
1D'
1C'
0B'
0A'
0@'
1?'
1>'
1='
1<'
1;'
0:'
09'
08'
17'
16'
15'
14'
13'
02'
01'
b111111111111111111111111111111111111111111111111111111111111111z 0'
b1111111111111111111111111111111111111111111111111111111111111111 /'
b0 .'
b0 -'
b0 ,'
b0 +'
b0 *'
b0 )'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
b0 \
b0 [
b0 Z
b0 Y
b0 X
0W
1V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
xN
bx M
xL
bx K
xJ
bx I
b0 H
b0 G
b0 F
0E
bx D
bx C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
bx :
b0 9
b0 8
07
b0 6
b0 5
bx 4
03
bx 2
01
00
bx /
bx .
0-
0,
b0 +
b0 *
b0 )
bx (
bx '
b0 &
b0 %
b0 $
bx #
b0 "
bx !
$end
#10
b1001 2
b1001 l,
b1010 5
b1010 ^,
b1010 o,
b1001 #
b1001 M
b1001 j,
b1001 y,
b1010 '
b1010 t,
b10 {,
b1010 !
b1010 g,
b1010 k,
b1010 s,
b1001 $
b1001 @
b1001 f,
b1001 q,
b10 )
b10 8
b10 A
b10 e,
b10 w,
b1111 *
b1111 9
b1111 c,
b1111 v,
b11110010 d,
b0 .
b0 C
b0 `,
b11 /
b11 :
b11 D
b11 _,
b11 h,
b11 p,
b11 u,
b110000111100100000000000000000000000000000000000000000000000000000000000001001 a,
17
#30
07
#40
b10100 5
b10100 ^,
b10100 o,
b10100 '
b10100 t,
b11 {,
b10100 !
b10100 g,
b10100 k,
b10100 s,
b11 )
b11 8
b11 A
b11 e,
b11 w,
b11110011 d,
b110000111100110000000000000000000000000000000000000000000000000000000000001001 a,
17
#50
07
#60
b1 6
b1 =
b10000000 2
b10000000 l,
b0 B
b0 X
b10110 5
b10110 ^,
b10110 o,
b0 #
b0 M
b0 j,
b0 y,
1V
1Q,
0R,
1N,
1P,
1I,
0J,
1F,
1H,
1A,
0B,
1>,
1@,
19,
0:,
16,
18,
11,
02,
1.,
10,
1),
0*,
1&,
1(,
1!,
0",
1|+
1~+
1w+
0x+
1t+
1v+
1o+
0p+
1l+
1n+
1g+
0h+
1d+
1f+
1_+
0`+
1\+
1^+
1W+
0X+
1T+
1V+
1O+
0P+
1L+
1N+
1G+
0H+
1D+
1F+
1?+
0@+
1<+
1>+
17+
08+
14+
16+
1/+
00+
1,+
1.+
1'+
0(+
1$+
1&+
1}*
0~*
1z*
1|*
1u*
0v*
1r*
1t*
1m*
0n*
1j*
1l*
1e*
0f*
1b*
1d*
1]*
0^*
1Z*
1\*
1U*
0V*
1R*
1T*
1M*
0N*
1J*
1L*
1E*
0F*
1B*
1D*
1=*
0>*
1:*
1<*
15*
06*
12*
14*
1-*
0.*
1**
1,*
1%*
0&*
1"*
1$*
1{)
0|)
1x)
1z)
1s)
0t)
1p)
1r)
1k)
0l)
1h)
1j)
1c)
0d)
1`)
1b)
1[)
0\)
1X)
1Z)
1S)
0T)
1P)
1R)
1K)
0L)
1H)
1J)
1C)
0D)
1@)
1B)
1;)
0<)
18)
1:)
13)
04)
10)
12)
1+)
0,)
1()
1*)
1#)
0$)
1~(
1")
1y(
0z(
1v(
1x(
1q(
0r(
1n(
1p(
1i(
0j(
1f(
1h(
1a(
0b(
1^(
1`(
1Y(
0Z(
1V(
1X(
1Q(
0R(
1N(
1P(
1I(
0J(
1F(
1H(
1A(
0B(
1>(
1@(
19(
0:(
16(
18(
11(
02(
1.(
10(
1)(
0*(
1&(
1((
1!(
0"(
1|'
1~'
1w'
0x'
1t'
1v'
1o'
0p'
1l'
1n'
1g'
0h'
1d'
1f'
1_'
0`'
1\'
1^'
1W'
1F'
0X'
1T'
1?'
1V'
0@'
1<'
1O'
1>'
0P'
1L'
17'
1N'
08'
14'
1G'
1|
b10010 U
b10010 [
1d
16'
1z
1b
b1111111111111111111111111111111111111111111111111111111111111111 /'
1Y,
0E'
1s
b1001 \
1''
0H'
1D'
b0 S
b0 .'
0Z,
1V,
b111111111111111111111111111111111111111111111111111111111111011z 0'
0W,
1n
1"'
b1001 T
b1001 +'
1C'
0B'
1U,
0T,
1q
1%'
1m
1!'
1A'
1S,
b1001 H
b1001 P
b1001 Z
b1001 *'
b1001 -'
b1001 \,
b1001 G
b1001 O
b1001 Y
b1001 )'
b1001 ,'
b1001 [,
b1 F
b1 Q
b1 4
b1 I
b10110 '
b10110 t,
b1001 %
b1001 <
b1001 ?
b1001 &
b1001 ;
b1001 >
b1001 i,
b1001 x,
b10110 !
b10110 g,
b10110 k,
b10110 s,
b10 *
b10 9
b10 c,
b10 v,
b100011 d,
b1 .
b1 C
b1 `,
b110 /
b110 :
b110 D
b110 _,
b110 h,
b110 p,
b110 u,
b1100001001000110000000000000000000000000000000000000000100000001111010000110000 a,
17
#70
07
#80
b100000 5
b100000 ^,
b100000 o,
b10000000 #
b10000000 M
b10000000 j,
b10000000 y,
b100000 '
b100000 t,
b100 {,
b100000 !
b100000 g,
b100000 k,
b100000 s,
b10000000 $
b10000000 @
b10000000 f,
b10000000 q,
b100 )
b100 8
b100 A
b100 e,
b100 w,
b1111 *
b1111 9
b1111 c,
b1111 v,
b11110100 d,
b0 .
b0 C
b0 `,
b11 /
b11 :
b11 D
b11 _,
b11 h,
b11 p,
b11 u,
b110000111101000000000000000000000000000000000000000000000000000000000010000000 a,
17
#90
07
#100
b1100100 B
b1100100 X
b101010 5
b101010 ^,
b101010 o,
b1100100 #
b1100100 M
b1100100 j,
b1100100 y,
0V
0Q,
1R,
0N,
0P,
0I,
1J,
0F,
0H,
0A,
1B,
0>,
0@,
09,
1:,
06,
08,
01,
12,
0.,
00,
0),
1*,
0&,
0(,
0!,
1",
0|+
0~+
0w+
1x+
0t+
0v+
0o+
1p+
0l+
0n+
0g+
1h+
0d+
0f+
0_+
1`+
0\+
0^+
0W+
1X+
0T+
0V+
0O+
1P+
0L+
0N+
0G+
1H+
0D+
0F+
0?+
1@+
0<+
0>+
07+
18+
04+
06+
0/+
10+
0,+
0.+
0'+
1(+
0$+
0&+
0}*
1~*
0z*
0|*
0u*
1v*
0r*
0t*
0m*
1n*
0j*
0l*
0e*
1f*
0b*
0d*
0]*
1^*
0Z*
0\*
0U*
1V*
0R*
0T*
0M*
1N*
0J*
0L*
0E*
1F*
0B*
0D*
0=*
1>*
0:*
0<*
05*
16*
02*
04*
0-*
1.*
0**
0,*
0%*
1&*
0"*
0$*
0{)
1|)
0x)
0z)
0s)
1t)
0p)
0r)
0k)
1l)
0h)
0j)
0c)
1d)
0`)
0b)
0[)
1\)
0X)
0Z)
0S)
1T)
0P)
0R)
0K)
1L)
0H)
0J)
0C)
1D)
0@)
0B)
0;)
1<)
08)
0:)
03)
14)
00)
02)
0+)
1,)
0()
0*)
0#)
1$)
0~(
0")
0y(
1z(
0v(
0x(
0q(
1r(
0n(
0p(
0i(
1j(
0f(
0h(
0a(
1b(
0^(
0`(
0Y(
1Z(
0V(
0X(
0Q(
1R(
0N(
0P(
0I(
1J(
0F(
0H(
0A(
1B(
0>(
0@(
09(
1:(
06(
08(
01(
12(
0.(
00(
0)(
1*(
0&(
0((
0!(
1"(
0|'
0~'
0w'
1x'
0t'
0v'
0o'
1p'
0l'
0n'
0g'
1h'
0d'
0V'
1>'
0F'
0^'
0f'
0O'
17'
0?'
0W'
0_'
1P'
0L'
08'
14'
1@'
0<'
0X'
0T'
0`'
0\'
0|
0d
0N'
16'
0;'
0S'
0['
0z
0b
0G'
b11 /'
1Y,
1l
1&"
b1100100 U
b1100100 [
1."
0='
1E'
0U'
0]'
0s
b0 \
0''
1H'
0D'
b1111111111111111111111111111111111111111111111111111111110011100 S
b1111111111111111111111111111111111111111111111111111111110011100 .'
0Z,
1V,
1g
1!"
1)"
b111111111111111111111111111111111111111111111111111111111001101z 0'
1W,
b1100100 R
b1100100 ],
0n
0"'
b0 T
b0 +'
1C'
1U,
1i
0q
1#"
1+"
0%'
0m
0!'
0A'
0S,
b1100100 H
b1100100 P
b1100100 Z
b1100100 *'
b1100100 -'
b1100100 \,
b0 G
b0 O
b0 Y
b0 )'
b0 ,'
b0 [,
b0 F
b0 Q
b1100100 +
b1100100 m,
b101010 '
b101010 t,
b0 %
b0 <
b0 ?
b10000000 &
b10000000 ;
b10000000 >
b10000000 i,
b10000000 x,
b101010 !
b101010 g,
b101010 k,
b101010 s,
b1100100 $
b1100100 @
b1100100 f,
b1100100 q,
b11 )
b11 8
b11 A
b11 e,
b11 w,
b100 *
b100 9
b100 c,
b100 v,
b1000011 d,
b100 /
b100 :
b100 D
b100 _,
b100 h,
b100 p,
b100 u,
b1000000010000110000000000000000000000000000000000000000000000000000000001100100 a,
17
#110
07
#120
b1111000 +
b1111000 m,
b1111000 #
b1111000 M
b1111000 j,
b1111000 y,
b1111000 B
b1111000 X
b101100 5
b101100 ^,
b101100 o,
1W
1}&
1z&
1|&
1u&
1r&
1t&
1m&
1j&
1l&
1e&
1b&
1d&
1]&
1Z&
1\&
1U&
1R&
1T&
1M&
1J&
1L&
1E&
1B&
1D&
1=&
1:&
1<&
15&
12&
14&
1-&
1*&
1,&
1%&
1"&
1$&
1{%
1x%
1z%
1s%
1p%
1r%
1k%
1h%
1j%
1c%
1`%
1b%
1[%
1X%
1Z%
1S%
1P%
1R%
1K%
1H%
1J%
1C%
1@%
1B%
1;%
18%
1:%
13%
10%
12%
1+%
1(%
1*%
1#%
1~$
1"%
1y$
1v$
1x$
1q$
1n$
1p$
1i$
1f$
1h$
1a$
1^$
1`$
1Y$
1V$
1X$
1Q$
1N$
1P$
1I$
1F$
1H$
1A$
1>$
1@$
19$
16$
18$
11$
1.$
10$
1)$
1&$
1($
1!$
1|#
1~#
1w#
1t#
1v#
1o#
1l#
1n#
1g#
1d#
1f#
1_#
1\#
1^#
1W#
1T#
1V#
1O#
1L#
1N#
1G#
1D#
1F#
1?#
1<#
1>#
17#
14#
16#
1/#
1,#
1.#
1'#
1$#
1&#
1}"
1z"
1|"
1u"
1r"
1t"
1m"
1j"
1l"
1e"
1b"
1d"
1]"
1Z"
1\"
1U"
1R"
1T"
1M"
1J"
1L"
1E"
1B"
1F'
0p'
1D"
1?'
1="
0@'
1<'
1H'
0P'
0x'
0"(
0*(
02(
0:(
0B(
0J(
0R(
0Z(
0b(
0j(
0r(
0z(
0$)
0,)
04)
0<)
0D)
0L)
0T)
0\)
0d)
0l)
0t)
0|)
0&*
0.*
06*
0>*
0F*
0N*
0V*
0^*
0f*
0n*
0v*
0~*
0(+
00+
08+
0@+
0H+
0P+
0X+
0`+
0h+
0p+
0x+
0",
0*,
02,
0:,
0B,
0J,
0R,
1:"
1;'
0C'
0K'
0k'
0s'
0{'
0%(
0-(
05(
0=(
0E(
0M(
0U(
0](
0e(
0m(
0u(
0}(
0')
0/)
07)
0?)
0G)
0O)
0W)
0_)
0g)
0o)
0w)
0!*
0)*
01*
09*
0A*
0I*
0Q*
0Y*
0a*
0i*
0q*
0y*
0#+
0++
03+
0;+
0C+
0K+
0S+
0[+
0c+
0k+
0s+
0{+
0%,
0-,
05,
0=,
0E,
0M,
1<"
0n'
0l
1t
1|
0>"
0F"
0N"
0V"
0^"
0f"
0n"
0v"
0~"
0(#
00#
08#
0@#
0H#
0P#
0X#
0`#
0h#
0p#
0x#
0"$
0*$
02$
0:$
0B$
0J$
0R$
0Z$
0b$
0j$
0r$
0z$
0$%
0,%
04%
0<%
0D%
0L%
0T%
0\%
0d%
0l%
0t%
0|%
0&&
0.&
06&
0>&
0F&
0N&
0V&
0^&
0f&
0n&
0v&
b1111000 U
b1111000 [
0~&
1='
0E'
0M'
0e'
0m'
0u'
0}'
0'(
0/(
07(
0?(
0G(
0O(
0W(
0_(
0g(
0o(
0w(
0!)
0))
01)
09)
0A)
0I)
0Q)
0Y)
0a)
0i)
0q)
0y)
0#*
0+*
03*
0;*
0C*
0K*
0S*
0[*
0c*
0k*
0s*
0{*
0%+
0-+
05+
0=+
0E+
0M+
0U+
0]+
0e+
0m+
0u+
0}+
0',
0/,
07,
0?,
0G,
0O,
b1111111111111111111111111111111111111111111111111111111110000000 \
15"
b10001000 S
b10001000 .'
1h'
b111 /'
0g'
0g
1o
1w
19"
1A"
1I"
1Q"
1Y"
1a"
1i"
1q"
1y"
1##
1+#
13#
1;#
1C#
1K#
1S#
1[#
1c#
1k#
1s#
1{#
1%$
1-$
15$
1=$
1E$
1M$
1U$
1]$
1e$
1m$
1u$
1}$
1'%
1/%
17%
1?%
1G%
1O%
1W%
1_%
1g%
1o%
1w%
1!&
1)&
11&
19&
1A&
1I&
1Q&
1Y&
1a&
1i&
1q&
1y&
b11z 0'
b1111111111111111111111111111111111111111111111111111111101111000 R
b1111111111111111111111111111111111111111111111111111111101111000 ],
10"
b10000000 T
b10000000 +'
1c'
0b'
0i
1q
1y
13"
1;"
1C"
1K"
1S"
1["
1c"
1k"
1s"
1{"
1%#
1-#
15#
1=#
1E#
1M#
1U#
1]#
1e#
1m#
1u#
1}#
1'$
1/$
17$
1?$
1G$
1O$
1W$
1_$
1g$
1o$
1w$
1!%
1)%
11%
19%
1A%
1I%
1Q%
1Y%
1a%
1i%
1q%
1y%
1#&
1+&
13&
1;&
1C&
1K&
1S&
1[&
1c&
1k&
1s&
1{&
1/"
1a'
b1111111111111111111111111111111111111111111111111111111111111000 H
b1111111111111111111111111111111111111111111111111111111111111000 P
b1111111111111111111111111111111111111111111111111111111111111000 Z
b1111111111111111111111111111111111111111111111111111111111111000 *'
b1111111111111111111111111111111111111111111111111111111111111000 -'
b1111111111111111111111111111111111111111111111111111111111111000 \,
b10000000 G
b10000000 O
b10000000 Y
b10000000 )'
b10000000 ,'
b10000000 [,
b1001 2
b1001 l,
b101100 '
b101100 t,
b10000000 %
b10000000 <
b10000000 ?
b1001 &
b1001 ;
b1001 >
b1001 i,
b1001 x,
b101100 !
b101100 g,
b101100 k,
b101100 s,
b1111 )
b1111 8
b1111 A
b1111 e,
b1111 w,
b10 *
b10 9
b10 c,
b10 v,
b101111 d,
b1010 /
b1010 :
b1010 D
b1010 _,
b1010 h,
b1010 p,
b1010 u,
b10100000001011110000000000000000000000000000000001000000011100110000111110110000 a,
17
#130
07
#140
b10000000 2
b10000000 l,
b10000000 #
b10000000 M
b10000000 j,
b10000000 y,
0E
b10000000 B
b10000000 X
b101110 5
b101110 ^,
b101110 o,
1V
1Q,
1N,
1P,
1I,
1F,
1H,
1A,
1>,
1@,
19,
16,
18,
11,
1.,
10,
1),
1&,
1(,
1!,
1|+
1~+
1w+
1t+
1v+
1o+
1l+
1n+
1g+
1d+
1f+
1_+
1\+
1^+
1W+
1T+
1V+
1O+
1L+
1N+
1G+
1D+
1F+
1?+
1<+
1>+
17+
14+
16+
1/+
1,+
1.+
1'+
1$+
1&+
1}*
1z*
1|*
1u*
1r*
1t*
1m*
1j*
1l*
1e*
1b*
1d*
1]*
1Z*
1\*
1U*
1R*
1T*
1M*
1J*
1L*
1E*
1B*
1D*
1=*
1:*
1<*
15*
12*
14*
1-*
1**
1,*
1%*
1"*
1$*
1{)
1x)
1z)
1s)
1p)
1r)
1k)
1h)
1j)
1c)
1`)
1b)
1[)
1X)
1Z)
1S)
1P)
1R)
1K)
1H)
1J)
1C)
1@)
1B)
1;)
18)
1:)
13)
10)
12)
1+)
1()
1*)
1#)
1~(
1")
1y(
1v(
1x(
1q(
1n(
1p(
1i(
1f(
1h(
1a(
1^(
1`(
1Y(
1V(
1X(
1Q(
1N(
1P(
1I(
1F(
1H(
1A(
1>(
1@(
19(
16(
18(
11(
1.(
10(
1)(
1&(
1((
1!(
1|'
1~'
1w'
16"
1t'
14"
1v'
1-"
1o'
0."
1*"
1l'
1,"
1n'
1%"
1g'
0&"
1""
1d'
1$"
1V'
1^'
1f'
1{
0D"
0L"
0T"
0\"
0d"
0l"
0t"
0|"
0&#
0.#
06#
0>#
0F#
0N#
0V#
0^#
0f#
0n#
0v#
0~#
0($
00$
08$
0@$
0H$
0P$
0X$
0`$
0h$
0p$
0x$
0"%
0*%
02%
0:%
0B%
0J%
0R%
0Z%
0b%
0j%
0r%
0z%
0$&
0,&
04&
0<&
0D&
0L&
0T&
0\&
0d&
0l&
0t&
0|&
0W
1O'
1W'
1_'
0p'
0x'
0"(
0*(
02(
0:(
0B(
0J(
0R(
0Z(
0b(
0j(
0r(
0z(
0$)
0,)
04)
0<)
0D)
0L)
0T)
0\)
0d)
0l)
0t)
0|)
0&*
0.*
06*
0>*
0F*
0N*
0V*
0^*
0f*
0n*
0v*
0~*
0(+
00+
08+
0@+
0H+
0P+
0X+
0`+
0h+
0p+
0x+
0",
0*,
02,
0:,
0B,
0J,
0R,
0|
1x
1N'
0="
0E"
0M"
0U"
0]"
0e"
0m"
0u"
0}"
0'#
0/#
07#
0?#
0G#
0O#
0W#
0_#
0g#
0o#
0w#
0!$
0)$
01$
09$
0A$
0I$
0Q$
0Y$
0a$
0i$
0q$
0y$
0#%
0+%
03%
0;%
0C%
0K%
0S%
0[%
0c%
0k%
0s%
0{%
0%&
0-&
05&
0=&
0E&
0M&
0U&
0]&
0e&
0m&
0u&
0}&
1J'
1R'
1Z'
1k'
1s'
1{'
1%(
1-(
15(
1=(
1E(
1M(
1U(
1](
1e(
1m(
1u(
1}(
1')
1/)
17)
1?)
1G)
1O)
1W)
1_)
1g)
1o)
1w)
1!*
1)*
11*
19*
1A*
1I*
1Q*
1Y*
1a*
1i*
1q*
1y*
1#+
1++
13+
1;+
1C+
1K+
1S+
1[+
1c+
1k+
1s+
1{+
1%,
1-,
15,
1=,
1E,
1M,
1z
0<"
b1111111111111111111111111111111111111111111111111111111111111111 /'
1G'
0>"
0:"
0F"
0B"
0N"
0J"
0V"
0R"
0^"
0Z"
0f"
0b"
0n"
0j"
0v"
0r"
0~"
0z"
0(#
0$#
00#
0,#
08#
04#
0@#
0<#
0H#
0D#
0P#
0L#
0X#
0T#
0`#
0\#
0h#
0d#
0p#
0l#
0x#
0t#
0"$
0|#
0*$
0&$
02$
0.$
0:$
06$
0B$
0>$
0J$
0F$
0R$
0N$
0Z$
0V$
0b$
0^$
0j$
0f$
0r$
0n$
0z$
0v$
0$%
0~$
0,%
0(%
04%
00%
0<%
08%
0D%
0@%
0L%
0H%
0T%
0P%
0\%
0X%
0d%
0`%
0l%
0h%
0t%
0p%
0|%
0x%
0&&
0"&
0.&
0*&
06&
02&
0>&
0:&
0F&
0B&
0N&
0J&
0V&
0R&
0^&
0Z&
0f&
0b&
0n&
0j&
0v&
0r&
0~&
0z&
1M'
1U'
1]'
1e'
1m'
1u'
1}'
1'(
1/(
17(
1?(
1G(
1O(
1W(
1_(
1g(
1o(
1w(
1!)
1))
11)
19)
1A)
1I)
1Q)
1Y)
1a)
1i)
1q)
1y)
1#*
1+*
13*
1;*
1C*
1K*
1S*
1[*
1c*
1k*
1s*
1{*
1%+
1-+
15+
1=+
1E+
1M+
1U+
1]+
1e+
1m+
1u+
1}+
1',
1/,
17,
1?,
1G,
1O,
b10000000 U
b10000000 [
0t
1s
b1111000 \
05"
0H'
1D'
1P'
1X'
1`'
b1110000 S
b1110000 .'
0h'
09"
0A"
0I"
0Q"
0Y"
0a"
0i"
0q"
0y"
0##
0+#
03#
0;#
0C#
0K#
0S#
0[#
0c#
0k#
0s#
0{#
0%$
0-$
05$
0=$
0E$
0M$
0U$
0]$
0e$
0m$
0u$
0}$
0'%
0/%
07%
0?%
0G%
0O%
0W%
0_%
0g%
0o%
0w%
0!&
0)&
01&
09&
0A&
0I&
0Q&
0Y&
0a&
0i&
0q&
0y&
b111111111111111111111111111111111111111111111111111111111111011z 0'
0o
1n
00"
b1000 T
b1000 +'
1C'
0K'
0S'
0['
1c'
b1110000 R
b1110000 ],
0y
0#"
0+"
03"
0;"
0C"
0K"
0S"
0["
0c"
0k"
0s"
0{"
0%#
0-#
05#
0=#
0E#
0M#
0U#
0]#
0e#
0m#
0u#
0}#
0'$
0/$
07$
0?$
0G$
0O$
0W$
0_$
0g$
0o$
0w$
0!%
0)%
01%
09%
0A%
0I%
0Q%
0Y%
0a%
0i%
0q%
0y%
0#&
0+&
03&
0;&
0C&
0K&
0S&
0[&
0c&
0k&
0s&
0{&
1m
1u
1}
1'"
0/"
1A'
1I'
1Q'
1Y'
0a'
b1000 H
b1000 P
b1000 Z
b1000 *'
b1000 -'
b1000 \,
b1111000 G
b1111000 O
b1111000 Y
b1111000 )'
b1111000 ,'
b1111000 [,
b1001 "
b1001 n,
b1001 r,
b1001 z,
b101110 '
b101110 t,
b0 |,
b1111000 %
b1111000 <
b1111000 ?
b1111000 &
b1111000 ;
b1111000 >
b1111000 i,
b1111000 x,
b101110 !
b101110 g,
b101110 k,
b101110 s,
b0 *
b0 9
b0 c,
b0 v,
b1111 d,
b1011 /
b1011 :
b1011 D
b1011 _,
b1011 h,
b1011 p,
b1011 u,
b10110000000011110000000000000000000000000000000000000000000000000100000001110011 a,
17
#150
07
#160
b1000000 5
b1000000 ^,
b1000000 o,
13
0J
0L
1N
b0 +
b0 m,
b1000000 '
b1000000 t,
b110111 !
b110111 g,
b110111 k,
b110111 s,
b1000000 $
b1000000 @
b1000000 f,
b1000000 q,
b11100110000000000000000000000000000000000000000000000000000000001000000 b,
b11 .
b11 C
b11 `,
b111 /
b111 :
b111 D
b111 _,
b111 h,
b111 p,
b111 u,
b1110011010000001000000000000000000000000000000000000000000000000000000000000000 a,
17
#170
07
#180
b1000001 5
b1000001 ^,
b1000001 o,
b1000001 '
b1000001 t,
b1001 &
b1001 ;
b1001 >
b1001 i,
b1001 x,
b1000001 !
b1000001 g,
b1000001 k,
b1000001 s,
10
b0 .
b0 C
b0 `,
b0 /
b0 :
b0 D
b0 _,
b0 h,
b0 p,
b0 u,
b10010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx a,
17
#190
07
#200
b0 2
b0 l,
b10001000 #
b10001000 M
b10001000 j,
b10001000 y,
b10001000 B
b10001000 X
b10000000 5
b10000000 ^,
b10000000 o,
0>"
0$"
0,"
04"
0<"
0N'
0z
0{
0%"
0-"
05"
0G'
0V'
0^'
0f'
1t
b0 \
0s
0|
0x
0&"
0""
0."
0*"
b10001000 U
b10001000 [
16"
02"
1H'
0D'
1P'
0L'
0O'
1X'
0T'
0W'
1`'
0\'
b1111111111111111111111111111111111111111111111111111111110000111 /'
0_'
b1111000 S
b1111000 .'
0h'
0d'
1o
0n
0w
0!"
0)"
11"
b0 T
b0 +'
0C'
1K'
0J'
1S'
0R'
1['
0Z'
0c'
1b'
b10001000 R
b10001000 ],
0m
0u
0}
0'"
1/"
0A'
0I'
0Q'
0Y'
1a'
b10000000 G
b10000000 O
b10000000 Y
b10000000 )'
b10000000 ,'
b10000000 [,
b10000000 "
b10000000 n,
b10000000 r,
b10000000 z,
b10000000 +
b10000000 m,
b10000000 '
b10000000 t,
b10000000 %
b10000000 <
b10000000 ?
b10000000 &
b10000000 ;
b10000000 >
b10000000 i,
b10000000 x,
b1000010 !
b1000010 g,
b1000010 k,
b1000010 s,
b1001 /
b1001 :
b1001 D
b1001 _,
b1001 h,
b1001 p,
b1001 u,
b10010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx a,
17
#210
07
#220
b1000010 5
b1000010 ^,
b1000010 o,
b0 +
b0 m,
b1000010 '
b1000010 t,
1,
bx .
bx C
bx `,
bx /
bx :
bx D
bx _,
bx h,
bx p,
bx u,
bx a,
17
#230
07
#240
1,
17
#250
07
