$date
	Fri Feb 16 19:27:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module fetch_tb $end
$var wire 64 ! valP [63:0] $end
$var wire 64 " valC [63:0] $end
$var wire 4 # rB [3:0] $end
$var wire 4 $ rA [3:0] $end
$var wire 1 % instr_valid $end
$var wire 1 & imem_error $end
$var wire 4 ' ifun [3:0] $end
$var wire 4 ( icode [3:0] $end
$var wire 1 ) hlt $end
$var reg 64 * PC [63:0] $end
$var reg 1 + clk $end
$scope module UUT $end
$var wire 64 , PC [63:0] $end
$var wire 1 + clk $end
$var reg 1 ) hlt $end
$var reg 4 - icode [3:0] $end
$var reg 4 . ifun [3:0] $end
$var reg 1 & imem_error $end
$var reg 1 % instr_valid $end
$var reg 80 / instruction [0:79] $end
$var reg 4 0 rA [3:0] $end
$var reg 4 1 rB [3:0] $end
$var reg 8 2 regids [0:7] $end
$var reg 64 3 valC [63:0] $end
$var reg 64 4 valP [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4
b0 3
bx 2
b0 1
b0 0
bx /
bx .
bx -
b0 ,
0+
b0 *
0)
bx (
bx '
0&
0%
b0 $
b0 #
b0 "
b0 !
$end
#1000
b1010 !
b1010 4
b0 2
b0 '
b0 .
b11 (
b11 -
b110000000000000000000000000000000000000000000000000000000000000000000000000000 /
1+
#2000
0+
#3000
b10100 !
b10100 4
b10000 "
b10000 3
b10 #
b10 1
b10 2
b110000000000100000000000000000000000000000000000000000000000000000000000010000 /
1+
b1010 *
b1010 ,
#4000
0+
#5000
b11110 !
b11110 4
b1100 "
b1100 3
b11 #
b11 1
b11 2
b110000000000110000000000000000000000000000000000000000000000000000000000001100 /
1+
b10100 *
b10100 ,
#6000
0+
#7000
b100111 !
b100111 4
b100111 "
b100111 3
b111 (
b111 -
b1110000000000000000000000000000000000000000000000000000000000000010011101100000 /
1+
b11110 *
b11110 ,
#8000
0+
#9000
b101001 !
b101001 4
b11 $
b11 0
b110011 2
b110 (
b110 -
b1100000001100110111001100000000000000000000000000000000000000000000000000000000 /
1+
b100111 *
b100111 ,
#10000
0+
#11000
b110010 !
b110010 4
b1111010 "
b1111010 3
b11 '
b11 .
b111 (
b111 -
b1110011000000000000000000000000000000000000000000000000000000000111101001100000 /
1+
b101001 *
b101001 ,
#12000
0+
#13000
b110100 !
b110100 4
b10 #
b10 1
b0 $
b0 0
b10 2
b0 '
b0 .
b110 (
b110 -
b1100000000000100111001100000000000000000000000000000000000000000000000000000000 /
1+
b110010 *
b110010 ,
#14000
0+
#15000
b111101 !
b111101 4
b1111101 "
b1111101 3
b11 '
b11 .
b111 (
b111 -
b1110011000000000000000000000000000000000000000000000000000000000111110101110000 /
1+
b110100 *
b110100 ,
#16000
0+
#17000
b1000110 !
b1000110 4
b1000110 "
b1000110 3
b0 '
b0 .
b1110000000000000000000000000000000000000000000000000000000000000100011000000000 /
1+
b111101 *
b111101 ,
#18000
0+
#19000
b1000111 !
b1000111 4
1)
b0 (
b0 -
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
1+
b1000110 *
b1000110 ,
#20000
0+
#21000
1%
bx '
bx .
bx (
bx -
bx /
1+
b1000111 *
b1000111 ,
#22000
0+
#23000
1&
1+
b10000000000 *
b10000000000 ,
#24000
0+
#25000
1+
